#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.0.16.0.3)"
    }
    defaultPrim = "FypLabScene"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "FypLabScene"
{
    reorder nameChildren = ["poi_Bicycle", "poi_TV", "poi_Robot", "FypLabScene", "cartoon_figure", "AudioMixGroups", "MoveToBicycle", "MoveToTV", "MoveToRobot", "infoCapsule", "Spin"]
    def Xform "poi_Bicycle" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0.52359885, 0)
        }
    )
    {
        quatf xformOp:orient = (0.9659258, 0, 0.25881904, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-1.2073144, 0.8488544, -0.52464557)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitCustomComponent "NYPCampus_PointOfInterestComponent"
        {
            string description = "A virtual reality project for safe riding. This project leverages VR to teach road safety to cyclists, in a bid to counter the rise in accidents involving cyclists. The VR experience allows cyclists to practise safe riding behaviour in an immersive, yet safe and controlled environment."
            string id = "bicycleInfo"
            string imageNames = "Bicycle"
            uniform token info:id = "NYPCampus.PointOfInterestComponent"
            string name = "Safe Riding Bike"
            string videoName = "null"
        }

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            rel behaviors = </FypLabScene/poi_Bicycle/OnTap>
            uniform token info:id = "RCP.BehaviorsContainer"
        }

        def Preliminary_Behavior "OnTap"
        {
            rel actions = </FypLabScene/poi_Bicycle/OnTap/Action>
            uniform bool exclusive
            rel triggers = </FypLabScene/poi_Bicycle/OnTap/Trigger>

            def Preliminary_Trigger "Trigger"
            {
                rel affectedObjects = </FypLabScene/poi_Bicycle>
                token info:id = "TapGesture"
            }

            def Preliminary_Action "Action"
            {
                rel affectedObjects = </FypLabScene>
                rel animationLibraryKey = </FypLabScene/MoveToBicycle>
                rel animationLibraryKeyOverrideKey = </FypLabScene/poi_Bicycle/OnTap/Trigger>
                token info:id = "PlayTimeline"
                int loops = 0
                int performCount = 1
                token type = "serial"
            }
        }
    }

    def Xform "poi_TV" (
        active = true
    )
    {
        float3 xformOp:translate = (0.446425, 1.2958367, -1.3808918)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitCustomComponent "NYPCampus_PointOfInterestComponent"
        {
            string description = "A VR application for RBS70 - a man-portable air defense system designed for anti-aircraft warfare. Trade and public visitors experienced a simulation of the weapon developed by SIT students during Singapore Airshow 2018. The application features friend or foe target identification and visual cues for firing of the missile."
            string id = "tvInfo"
            string imageNames = "TV"
            uniform token info:id = "NYPCampus.PointOfInterestComponent"
            string name = "Immersive Technology Project"
            string videoName = "Hummingbirds"
        }

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            rel behaviors = </FypLabScene/poi_TV/OnTap>
            uniform token info:id = "RCP.BehaviorsContainer"
        }

        def Preliminary_Behavior "OnTap"
        {
            rel actions = </FypLabScene/poi_TV/OnTap/Action>
            uniform bool exclusive
            rel triggers = </FypLabScene/poi_TV/OnTap/Trigger>

            def Preliminary_Trigger "Trigger"
            {
                rel affectedObjects = </FypLabScene/poi_TV>
                token info:id = "TapGesture"
            }

            def Preliminary_Action "Action"
            {
                rel affectedObjects = </FypLabScene>
                rel animationLibraryKey = </FypLabScene/MoveToTV>
                rel animationLibraryKeyOverrideKey = </FypLabScene/poi_TV/OnTap/Trigger>
                token info:id = "PlayTimeline"
                int loops = 0
                int performCount = 1
                token type = "serial"
            }
        }
    }

    def Xform "poi_Robot" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, -1.5707963, 0)
        }
    )
    {
        quatf xformOp:orient = (0.70710677, 0, -0.70710677, 0)
        float3 xformOp:translate = (1.1270127, 0.8155195, 0.40174043)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitCustomComponent "NYPCampus_PointOfInterestComponent"
        {
            string description = "Let out intelligent tour robot, Passion, bring you through a technological journey co-created with our industry partners. The tour is organised into 8 technology sectors, each featuring a collection of interactive projects developed by our students and staff."
            string id = "robotInfo"
            string imageNames = "Robot"
            uniform token info:id = "NYPCampus.PointOfInterestComponent"
            string name = "Intelligent Guided Tour Robot"
            string videoName = "null"
        }

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            rel behaviors = </FypLabScene/poi_Robot/OnTap>
            uniform token info:id = "RCP.BehaviorsContainer"
        }

        def Preliminary_Behavior "OnTap"
        {
            rel actions = </FypLabScene/poi_Robot/OnTap/Action>
            uniform bool exclusive
            rel triggers = </FypLabScene/poi_Robot/OnTap/Trigger>

            def Preliminary_Trigger "Trigger"
            {
                rel affectedObjects = </FypLabScene/poi_Robot>
                token info:id = "TapGesture"
            }

            def Preliminary_Action "Action"
            {
                rel affectedObjects = </FypLabScene>
                rel animationLibraryKey = </FypLabScene/MoveToRobot>
                rel animationLibraryKeyOverrideKey = </FypLabScene/poi_Robot/OnTap/Trigger>
                token info:id = "PlayTimeline"
                int loops = 0
                int performCount = 1
                token type = "serial"
            }
        }
    }

    def "FypLabScene" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        references = @Resources/FypLabScene.usdz@
    )
    {
        reorder nameChildren = ["Materials", "Meshes", "Cube"]
        float3 xformOp:scale = (0.01, 0.01, 0.01)
        float3 xformOp:translate = (1.5681573, 0, -0.9054742)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "FypLab"
        {
            over "Materials"
            {
                over "main"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                }
            }
        }
    }

    def "cartoon_figure" (
        customData = {
            float3 rotationEulerHint = (0, -2.1816616, 2.3841858e-7)
        }
        references = @Resources/cartoon_figure.usdz@
    )
    {
        reorder nameChildren = ["Materials", "Meshes", "Cube"]
        quatf xformOp:orient = (-0.46174863, -1.0573994e-7, 0.8870108, -5.5044726e-8)
        float3 xformOp:scale = (0.01, 0.01, 0.01)
        float3 xformOp:translate = (1.0737138, 0.03964902, 1.7623343)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def RealityKitComponent "AudioMixGroups"
    {
        uniform token info:id = "RealityKit.AudioMixGroups"

        def RealityKitAudioMixGroup "MixGroup"
        {
            float gain = 0
            bool mute = 0
            float speed = 1
        }
    }

    def RealityKitTimeline "MoveToBicycle"
    {
        reorder nameChildren = ["Track", "Track2"]
        def RealityKitTrack "Track2"
        {
            def RealityKitAction "Transform_To"
            {
                string actionKind = "moveTo"
                int blendLayer = 300
                double duration = 4.011238383390305
                uniform token info:id = "9CC3168D-0BC8-468E-A33E-BCA26E7E6647"
                float3 position = (-1.83, 0.03965, -1)
                quatf rotation = (0.9396926, 1.2727358e-7, 0.34202012, 1.5222668e-8)
                float3 scale = (0.01, 0.01, 0.01)
                double startTime = 0
                rel target = </FypLabScene/cartoon_figure>

                def RealityKitStruct "transformMode"
                {
                    rel referenceEntity = </FypLabScene>
                    token type = "parent"
                }

                def RealityKitStruct "timingFunction"
                {
                }
            }
        }
    }

    def RealityKitTimeline "MoveToTV"
    {
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Transform_To"
            {
                string actionKind = "moveTo"
                int blendLayer = 300
                double duration = 4.006321729811947
                uniform token info:id = "14D0F963-F025-4636-A1C1-F9B9D91AE7BE"
                float3 position = (-0.2, 0.03964902, -1)
                quatf rotation = (1, 1.6292068e-7, -4.3711374e-8, 7.549791e-8)
                float3 scale = (0.01, 0.01, 0.01)
                double startTime = 0
                rel target = </FypLabScene/cartoon_figure>

                def RealityKitStruct "transformMode"
                {
                    rel referenceEntity = </FypLabScene>
                    token type = "parent"
                }

                def RealityKitStruct "timingFunction"
                {
                }
            }
        }
    }

    def RealityKitTimeline "MoveToRobot"
    {
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Transform_To"
            {
                string actionKind = "moveTo"
                int blendLayer = 300
                double duration = 4.008784741426991
                uniform token info:id = "9AE3C041-AA2F-4740-BBD6-6D781D1E818B"
                float3 position = (1.2, 0.03964902, 1)
                quatf rotation = (0.70710677, 0, -0.70710677, 0)
                float3 scale = (0.01, 0.01, 0.01)
                double startTime = 0
                rel target = </FypLabScene/cartoon_figure>

                def RealityKitStruct "transformMode"
                {
                    rel referenceEntity = </FypLabScene>
                    token type = "parent"
                }

                def RealityKitStruct "timingFunction"
                {
                }
            }
        }
    }

    def Capsule "infoCapsule" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        customData = {
            float3 rotationEulerHint = (1.5707966, -0.34906587, -1.7443233e-7)
        }
    )
    {
        uniform token axis = "Y"
        double height = 0.2
        rel material:binding = </FypLabScene/infoCapsule/DefaultMaterial>
        double radius = 0.1
        quatf xformOp:orient = (0.69636416, 0.69636434, -0.12278785, 0.12278776)
        float3 xformOp:scale = (0.4, 2, 2)
        float3 xformOp:translate = (1.1340734, 1.7041992, 1.4116361)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:surface.connect = </FypLabScene/infoCapsule/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            rel behaviors = </FypLabScene/infoCapsule/OnTap>
            uniform token info:id = "RCP.BehaviorsContainer"
        }

        def Preliminary_Behavior "OnTap"
        {
            rel actions = </FypLabScene/infoCapsule/OnTap/Action>
            uniform bool exclusive
            rel triggers = </FypLabScene/infoCapsule/OnTap/Trigger>

            def Preliminary_Trigger "Trigger"
            {
                rel affectedObjects = </FypLabScene/infoCapsule>
                token info:id = "TapGesture"
            }

            def Preliminary_Action "Action"
            {
                rel affectedObjects = </FypLabScene>
                rel animationLibraryKey = </FypLabScene/Spin>
                rel animationLibraryKeyOverrideKey = </FypLabScene/infoCapsule/OnTap/Trigger>
                token info:id = "PlayTimeline"
                int loops = 0
                int performCount = 1
                token type = "serial"
            }
        }
    }

    def RealityKitTimeline "Spin"
    {
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Spin"
            {
                string actionKind = "spin"
                int blendLayer = 400
                double duration = 1
                uniform token info:id = "18A90A82-C1B2-473F-B8FB-89F4B752D483"
                double startTime = 0.0051769578313253005
                rel target = </FypLabScene/cartoon_figure>

                def RealityKitStruct "timingFunction"
                {
                }
            }
        }
    }
}

