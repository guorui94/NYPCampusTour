#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.0.16.0.3)"
    }
    defaultPrim = "FypLabScene"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "FypLabScene"
{
    reorder nameChildren = ["poi_Bicycle", "poi_TV", "poi_Robot", "FypLabScene"]
    def Xform "poi_Bicycle" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0.8726645, 0)
        }
    )
    {
        quatf xformOp:orient = (0.9063078, 0, 0.4226182, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-1.1154797, 0.512969, -0.232369)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitCustomComponent "NYPCampus_PointOfInterestComponent"
        {
            string description = "A virtual reality project for safe riding. This project leverages VR to teach road safety to cyclists, in a bid to counter the rise in accidents involving cyclists. The VR experience allows cyclists to practise safe riding behaviour in an immersive, yet safe and controlled environment."
            string id = "bicycleInfo"
            string imageNames = "Bicycle"
            uniform token info:id = "NYPCampus.PointOfInterestComponent"
            string name = "Safe Riding Bike"
            string videoName = "null"
        }
    }

    def Xform "poi_TV" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0.8726645, 0)
        }
    )
    {
        quatf xformOp:orient = (0.9063078, 0, 0.4226182, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-0.34002548, 0.7898291, -1.6120393)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitCustomComponent "NYPCampus_PointOfInterestComponent"
        {
            string description = "A VR application for RBS70 - a man-portable air defense system designed for anti-aircraft warfare. Trade and public visitors experienced a simulation of the weapon developed by SIT students during Singapore Airshow 2018. The application features friend or foe target identification and visual cues for firing of the missile."
            string id = "tvInfo"
            string imageNames = "TV"
            uniform token info:id = "NYPCampus.PointOfInterestComponent"
            string name = "Immersive Technology Project"
            string videoName = "Hummingbirds"
        }
    }

    def Xform "poi_Robot" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, -0.8726645, 0)
        }
    )
    {
        quatf xformOp:orient = (0.9063078, 0, -0.4226182, 0)
        float3 xformOp:translate = (1.8050865, 0.78237695, -0.9841166)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitCustomComponent "NYPCampus_PointOfInterestComponent"
        {
            string description = "Let out intelligent tour robot, Passion, bring you through a technological journey co-created with our industry partners. The tour is organised into 8 technology sectors, each featuring a collection of interactive projects developed by our students and staff."
            string id = "robotInfo"
            string imageNames = "Robot"
            uniform token info:id = "NYPCampus.PointOfInterestComponent"
            string name = "Intelligent Guided Tour Robot"
            string videoName = "null"
        }
    }

    def "FypLabScene" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        references = @Resources/FypLabScene.usdz@
    )
    {
        rel material:binding = </FypLabScene/FypLabScene/FypLab/Materials/main> (
            bindMaterialAs = "weakerThanDescendants"
        )
        float3 xformOp:scale = (1, 1, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "FypLab"
        {
            over "Materials"
            {
                over "main"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                }
            }
        }
    }
}

